// reset button variants
@mixin button-variant(
  $background: null,
  $border: null,
  $hover-background: null,
  $hover-border: null,
  $active-background: null,
  $active-border: null
) {
}

// conca button variants
@mixin conca-button-variants($parent, $background, $color: null, $border: null){
    $background: $background;
    $border: $background;
    $color: color-contrast($background);

    $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount));
    $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border,$btn-hover-border-tint-amount));
    $hover-color: color-contrast($hover-background);
    
    $active-background: if(  $color == $color-contrast-light, shade-color($background, $btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount));
    $active-border: if( $color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount));
    $active-color: color-contrast($active-background);

    $disabled-background: $background;
    $disabled-border: $border;
    $disabled-color: color-contrast($disabled-background);
    
    #{$parent} {
        color: $color;
        @include gradient-bg($background);
        border-color: $border;
        box-shadow: 0px 1px 2px 0 rgba($background, .25), 0px 0px 1px 0 rgba($background, 1);
    
        &:hover {
            color: $hover-color !important;
            @include gradient-bg($hover-background !important);
            box-shadow: none;


            & .badge-center:not(.badge-no-hover){
              background: $hover-color !important;
              color: $hover-background !important;
            }
        }
    
        .btn-check:focus + &,
        &:focus,
        &.focus {
          color: $hover-color;
          @include gradient-bg($hover-background);
          border-color: $hover-background;
          box-shadow: none;

          & .badge-center:not(.badge-no-hover){
            background: $hover-color !important;
            color: $hover-background !important;
          }
        }
    
        .btn-check:checked + &,
        .btn-check:active + &,
        &:active,
        &.active,
        &.show.dropdown-toggle,
        .show > &.dropdown-toggle {
        color: $active-color !important;
            background-color: $active-background !important;
            background-image: if($enable-gradients, none !important, null);
            border-color: $active-background !important;
        }
    
        &.disabled,
        &:disabled {
        color: $disabled-color !important;
        background-color: $disabled-background !important;

        background-image: if($enable-gradients, none !important, null);
        border-color: $disabled-border !important;
        box-shadow: none !important;
        }

       
    }

}

// Label
@mixin conca-button-label-variant($parent, $background, $color: null, $border: null) {
  $border: transparent;

  $label-color: if($color, $color, $background);
  $hover-color: color-contrast($background);

  $label-background: if($hover-color == $color-contrast-light, shade-color($background, $btn-label-bg-shade-amount, $white), tint-color($background, $btn-label-bg-tint-amount, $white) );

  $hover-background: $background;
  $active-color: $hover-color;
  $active-background: $hover-background;

  $disabled-background: if( $hover-color == $color-contrast-light,  shade-color($background, $btn-label-disabled-bg-shade-amount, $white), tint-color($background, $btn-label-disabled-bg-tint-amount, $white) );

  #{$parent} {
    color: $label-color;
    border-color: $border;
    background: $label-background;

    &:hover {
      border-color: $border !important;
      background: $hover-background !important;
      color: $hover-color !important;

      & .badge-center:not(.badge-no-hover){
        background: $hover-color !important;
        color: $hover-background !important;
    }
    }

    &:focus,
    &.focus {
      color: $hover-color;
      background: $hover-background;
      box-shadow: none !important;

      & .badge-center:not(.badge-no-hover){
          background: $hover-color !important;
          color: $hover-background !important;
      }
    }

    &:active,
    &.active,
    &.show.dropdown-toggle,
    .show > &.dropdown-toggle {
      color: $active-color !important;
      background-color: $active-background !important;
      background-image: if($enable-gradients, none !important, null);
      border-color: $border !important;

      &:focus {
        box-shadow: none;
      }
    }

    &.disabled,
    &:disabled {
      color: $label-color !important;
      border-color: $border !important;
      background: $disabled-background !important;
      box-shadow: none;
    }
  }

  // Button groups
  .input-group #{$parent} {
    border-right: $input-btn-border-width solid $active-background;
    border-left: $input-btn-border-width solid $active-background;
  }
  .btn-group-vertical #{$parent} {
    border-top-color: $active-background;
    border-bottom-color: $active-background;
  }
}

// Outline
@mixin button-outline-variant($color: null, $color-hover: null, $hover-color: null) {
}

@mixin conca-button-outline-variant($parent, $color, $hover-color: null) {
  $color: $color;
  $background: $color;
  $border: $color;

  $active-background: shade-color($background, $btn-active-bg-shade-amount);
  $active-border: shade-color($background, $btn-active-bg-shade-amount);
  $active-color: color-contrast($active-background);

  $hover-background: $color;
  $hover-color: color-contrast($hover-background);

  #{$parent} {
    color: $color;
    border-color: $color;
    background: transparent;


    &:hover {
      color: $hover-color !important;
      background-color: $hover-background !important;
      border-color: $hover-background !important;

      & .badge-center:not(.badge-no-hover){
        background: $hover-color !important;
        color: $hover-background !important;
      }
    }

    .btn-check:focus + &,
    &:focus {
        color: $hover-color !important;
        background-color: $hover-background !important;
        border-color: $hover-background !important;
        box-shadow: none;

        & .badge-center:not(.badge-no-hover){
          background: $hover-color !important;
          color: $hover-background !important;
        }
    }

    .btn-check:checked + &,
    .btn-check:active + &,
    &:active,
    &.active,
    &.dropdown-toggle.show {
      color: $active-color !important;
      background-color: $active-background !important;
      border-color: $active-border !important;

      &:focus {
        box-shadow: none;
      }
    }

    &.disabled,
    &:disabled {
      color: $color !important;
      background-color: transparent !important;
    }
  }

  #{$parent} .badge {
    background: $color;
    border-color: $color;
    color: color-contrast($color);
  }

  #{$parent}:hover .badge,
  #{$parent}:focus:hover .badge,
  #{$parent}:active .badge,
  #{$parent}.active .badge,
  .show > #{$parent}.dropdown-toggle .badge {
    background: $hover-color;
    border-color: $hover-color;
  }
}

@mixin conca-button-ghost-variant($parent, $color, $hover-color: null) {
  $color: $color;
  $background: $color;
  $color-hover: $color;
  $border: $color;
  $focus-color: color-contrast($color);
  $focus-background: $background;

  $hover-background: if($hover-color == $color-contrast-light, shade-color($background, $btn-label-bg-shade-amount, $white), tint-color($background, $btn-label-bg-tint-amount, $white) );

  $active-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount));

  $active-border: if( $color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount));

  $active-color: color-contrast($active-background);

  #{$parent} {
    color: $color;
    border: 0;
    background: transparent;


    &:hover {
      color: $color-hover !important;
      background-color: $hover-background !important;
      
    }

    .btn-check:focus + &,
    &:focus {
        color: $focus-color !important;
        background-color: $focus-background !important;

        box-shadow: none;
    }

    .btn-check:checked + &,
    .btn-check:active + &,
    &:active,
    &.active,
    &.dropdown-toggle.show {
      color: $active-color !important;
      background-color: $background !important;

      &:focus {
        box-shadow: none;
      }
    }

    &.disabled,
    &:disabled {
      color: $color !important;
      background-color: transparent !important;
    }
  }

  #{$parent} .badge {
    background: $color;
    border-color: $color;
    color: color-contrast($color);
  }

  #{$parent}:hover .badge,
  #{$parent}:focus:hover .badge,
  #{$parent}:active .badge,
  #{$parent}.active .badge,
  .show > #{$parent}.dropdown-toggle .badge {
    background: $color-hover;
    border-color: $color-hover;
  }
}


@mixin conca-button-icon-variant($parent, $color, $hover-color: null) {
  $color: $color;
  $background: $color;
  $color-hover: $color;
  $border: $color;
  $focus-color: color-contrast($color);
  $focus-background: $background;

  $hover-background: if($hover-color == $color-contrast-light, shade-color($background, $btn-label-bg-shade-amount, $white), tint-color($background, $btn-label-bg-tint-amount, $white) );

  $active-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount));

  $active-border: if( $color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount));

  $active-color: color-contrast($active-background);

  #{$parent} {
    color: $color;
    border: 0;
    &:hover {
      color: $color !important;
      background-color: $hover-background !important;
      
    }

    .btn-check:focus + &,
    &:focus {
      color: $color-hover !important;
      background-color: $hover-background !important;
      box-shadow: none;
    }

    .btn-check:checked + &,
    .btn-check:active + &,
    &:active,
    &.active,
    &.dropdown-toggle.show {
      color: $color-hover !important;
      background-color: $hover-background !important;

      &:focus {
        box-shadow: none;
      }
    }

    &.disabled,
    &:disabled {
      color: $color !important;
      background-color: transparent !important;
    }
  }

  #{$parent} .badge {
    background: $color;
    border-color: $color;
    color: color-contrast($color);
  }

  #{$parent}:hover .badge,
  #{$parent}:focus:hover .badge,
  #{$parent}:active .badge,
  #{$parent}.active .badge,
  .show > #{$parent}.dropdown-toggle .badge {
    background: $color-hover;
    border-color: $color-hover;
  }
}